spring.application.name=olabiflix

## cria o banco de dados em memória
## estrutura da url = [JDBC]:[H2]:[onde vai rodar a aplicação (memória/local)]:[nome do banco]
# url do banco em h2 spring.datasource.url=jdbc:h2:mem:olabiflixdb
spring.datasource.url=jdbc:postgresql://localhost:5432:olabiflix

## adiciona usuario e senha padrões do H2
# spring.datasource.username=sa
# spring.datasource.password=password

## adiciona usuario e senha do PostgreSQL
spring.datasource.username=postgres
spring.datasource.password=senha123

## especifica a classe do driver JDBC para o banco de dados H2
## org.h2.driver é o driver JDBC necessário para se conectar ao bando de dados H2
# spring.datasource.driver-class-name=org.h2.Driver

## define o dialeto especifico do banco de dadosque o Hibernate deve usar
## informa ao Hibernate como gear as consultas SQL especificas para o H2
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

## o Hibernate cria o esquema do banco de dados no início da execução da aplicação e o apaga ao final
# spring.jpa.hibernate.ddl-auto=create-drop

## o Hibernate modifica a model caso seja necessário
spring.jpa.hibernate.ddl-auto=update

## permite visualizar o banco no navegador http://localhost:8080/h2-console
# spring.h2.console.enabled=true
